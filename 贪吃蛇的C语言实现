#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <time.h>
#include <conio.h>
/////////////////////////
#define Maphigh 50//地图高度
#define Mapwidth 100//地图长度
#define SnakeSize 50//蛇的最大长度

///////////////////////////////////////////////////////////数据设计部分开始
struct//食物的结构体
{
    int x;
    int y;
}Food;
struct//蛇的结构体
{
    int x[SnakeSize];
    int y[SnakeSize];
    int len;


}snake;

int key='w';//全局变量声明，初始化蛇的移动方向为向上走
int ChangeFlag=0;//用于判断是否撞墙或者撞自己
int Speed=50;//蛇的移动速度

///////////////////////////////////////////////////////////////数据设计部分结束

///////////////////////////////////////////////////////////////函数功能部分设计开始

void gotoxy(int x, int y)//光标移动函数进行辅助设计
{
    COORD pos = {x,y};
    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);// 获取标准输出设备句柄
    SetConsoleCursorPosition(hOut, pos);//两个参数分别是指定哪个窗体，具体位置
}


void MAPdraw ()//绘制地图函数
{
    int i;
    int k;
    for(i=0;i<=Maphigh;i++)
    {
     gotoxy(0,i);
     printf("*");
     gotoxy(Mapwidth,i);
     printf("*");
    }
    for(i=1;i<=Mapwidth-1;i++)//绘制地图边界
    {
        gotoxy(i,0);
        printf("*");
        gotoxy(i,Maphigh);
        printf("*");
    }
    snake.len=3;//初始化蛇信息
    snake.x[0]=Mapwidth/2;
    snake.y[0]=Maphigh/2;
    gotoxy(snake.x[0],snake.y[0]);
    printf("O");
    for(k=1;k<snake.len;k++)//画出蛇
    {
        snake.x[k]=snake.x[k-1]+1;
        snake.y[k]=snake.y[k-1];
        gotoxy(snake.x[k],snake.y[k]);
        printf("O");
    }
}

void CreatFood()//画食物
{
    int k;
    int flag=0;//用于判断是否需要重新随机食物位置的标志
    srand((unsigned)time(NULL));
    do
    {
    Food.x=rand()%(Mapwidth-2)+1;
    Food.y=rand()%(Maphigh-2)+1;
    for(k=0;k<snake.len;k++)//判断食物和蛇重不重合
    {
        if((Food.x==snake.x[k])&&(Food.y==snake.y[k]))
        {
            flag=1;
        }
    }
    }
    while(flag);
    gotoxy(Food.x,Food.y);
    printf("X");

}
void presskey()
{
    int i;
    if(_kbhit())//接收按键
    {
        fflush(stdin);
        key=_getch();
    }
    if(!ChangeFlag)
{
    gotoxy(snake.x[snake.len-1],snake.y[snake.len-1]);//蛇最后一节的擦除
    printf(" ");//蛇最后一节的擦除
}

    for(i=snake.len-1;i>0;i--)//蛇身体的移动
    {
    snake.x[i]=snake.x[i-1];
    snake.y[i]=snake.y[i-1];
    }
    switch(key)//更新蛇头的位置
    {
    case'w':
    case'W':
        snake.x[0]=snake.x[0];
        snake.y[0]=snake.y[0]-1;
        break;
    case'a':
    case'A':
        snake.x[0]=snake.x[0]-1;
        snake.y[0]=snake.y[0];
        break;
    case's':
    case'S':
        snake.x[0]=snake.x[0];
        snake.y[0]=snake.y[0]+1;
        break;
    case'd':
    case'D':
        snake.x[0]=snake.x[0]+1;
        snake.y[0]=snake.y[0];
        break;
    }
    gotoxy(snake.x[0],snake.y[0]);
    printf("O");
    ChangeFlag=0;
    gotoxy(Maphigh+2,0);
 if((snake.x[0]==Food.x)&&(snake.y[0]==Food.y))//吃食物，分四种情况讨论加尾巴的位置
    {
        snake.len=snake.len+1;
        if(snake.x[snake.len-3]==snake.x[snake.len-2]&&snake.y[snake.len-3]>snake.y[snake.len-2])
        {
            snake.x[snake.len-1]=snake.x[snake.len-2];
            snake.y[snake.len-1]=snake.y[snake.len-2]-1;
            gotoxy(snake.x[snake.len-1],snake.y[snake.len-1]);
            printf("O");
        }
        if(snake.x[snake.len-3]==snake.x[snake.len-2]&&snake.y[snake.len-3]<snake.y[snake.len-2])
        {
            snake.x[snake.len-1]=snake.x[snake.len-2];
            snake.y[snake.len-1]=snake.y[snake.len-2]+1;
            gotoxy(snake.x[snake.len-1],snake.y[snake.len-1]);
            printf("O");
        }
        if(snake.y[snake.len-3]==snake.y[snake.len-2]&&snake.x[snake.len-3]>snake.x[snake.len-2])
        {
            snake.x[snake.len-1]=snake.x[snake.len-2]-1;
            snake.y[snake.len-1]=snake.y[snake.len-2];
            gotoxy(snake.x[snake.len-1],snake.y[snake.len-1]);
            printf("O");
        }
        if(snake.y[snake.len-3]==snake.y[snake.len-2]&&snake.x[snake.len-3]<snake.x[snake.len-2])
        {
            snake.x[snake.len-1]=snake.x[snake.len-2]+1;
            snake.y[snake.len-1]=snake.y[snake.len-2];
            gotoxy(snake.x[snake.len-1],snake.y[snake.len-1]);
            printf("O");
        }
        CreatFood();
        Speed=0.9*Speed;
    }
    }
void snakestate()
{
    if((snake.x[0]==0)||(snake.x[0]==Mapwidth)||(snake.y[0]==0)||(snake.y[0]==Maphigh))//判断蛇是否撞墙
    {
        ChangeFlag=1;
    }


    for(int i=1;i<snake.len;i++)//判断蛇是否撞自己
    {
        if((snake.x[0]==snake.x[i])&&(snake.y[0]==snake.y[i]))
        {
            ChangeFlag=1;
        }
    }
}






//////////////////////////////////////////////////////////////////////////函数功能设计部分结束
int main()
{
    int a='a';
    MAPdraw (Maphigh,Mapwidth);
    CreatFood();
    while(1)
    {
        presskey();
        Sleep(Speed);
        snakestate();
        if(ChangeFlag)
        {
            break;
        }
    }
    gotoxy(Mapwidth/2,Maphigh/2);
    printf("GameOver");
    system("pause");
    return 0;
}
